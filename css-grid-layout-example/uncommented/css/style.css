.text-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

.banner {
  font-size: 4vw;
}

.image-size {
  height: 32vw;
  width: 42.66vw;
  /*
  height: 50vmin; 
  width: 66vmin;
  */
}
.grid-container {
  font-family: "Open Sans";
  font-size: 24px;
  color: white;
  height: calc(20vh);
  background: white;
}

.grid-item {
  background: #229fd9ff;
  text-align: center;
  align-content: center;
  padding: 15px;
}

.grid-container {
  display: grid;
  grid-gap: 15px;
}

.grid-container header { grid-area: header; }

.grid-container main { grid-area: main; }

.grid-container nav { grid-area: navigation; }

.grid-container aside { grid-area: sidebar; font-size: 14px; }

.grid-container footer { grid-area: footer; }

@media all and (display-mode: fullscreen) {
  .grid-container {
    grid-template-columns: 200px 1fr 200px;
    grid-template-rows: 12vw 1fr 120px;
    grid-template-areas: "header header header"
     "navigation main sidebar"
     "footer footer footer";  
 }
}

@media not all and (display-mode: fullscreen) {
  .grid-container {
    grid-template-columns: 200px 1fr 200px;
    grid-template-rows: 12vw 1fr 45px;
    grid-template-areas: "header header header"
     "navigation main sidebar"
     "footer footer footer";
 }
}

@media screen and (max-width: 1082px) {
  .grid-container {
    grid-template-columns: 1fr 150px;
    grid-template-rows: 12vw 50px 1fr 10px;
    grid-template-areas: "header header"
      "navigation navigation"
      "main sidebar"
      "footer footer";
  }
}

@media screen and (max-width: 678px) {
  .grid-container {
    grid-template-columns: 100%;
    grid-template-rows: 12vw 50px 3fr 1fr 30px;
    grid-template-areas: "header"
      "navigation"
      "main"
      "sidebar"
      "footer";
  }
  .align-left {
    display: flex;
    align-items: flex-start;
    justify-content: flex-start;
    text-align:left;
  }
}

/* 
Tricks when using CSS grid, 
  1) Think about how large you want your elements to become. Maybe there is a nasty word-wrap that occours.
    You do not need to look for a specific element as media-queries change based on screen-size.
  2) Inspect with console and put it on the bottom as our media queries are all set to monitor the width ☝️ .

  3) For an image, both height and width, calculate based on vh if your dev tool console on the right. later translate to vmin
    Dev tool wants to be on the right because vertical realestate is less on most computers.
  idea: git file summaries.
    Summaries can include, many steps taken to build a project. without bug fix or patch.

  4) got to desired screen... get max pixel height how you want it written down. ie:592
*/
/*
I need to write down all the things I did today.

https://css-tricks.com/simple-little-use-case-vmin/
*/
